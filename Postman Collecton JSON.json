{
	"info": {
		"_postman_id": "52f95447-cfac-41f3-bc54-15700919a878",
		"name": "UE Refactored Competitions Platform",
		"description": "A test collection for the refactored application of the Ara-Ara-Arabians group, done by Unknown Entities.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25957056"
	},
	"item": [
		{
			"name": "Competitor Sign Up",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function () {\r",
							"\tpm.response.to.not.be.error;\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"User created test\", function () {\r",
							"\r",
							"    const {message} = pm.response.json();\r",
							"    const { username } = JSON.parse(pm.request.body.raw);\r",
							"\r",
							"    pm.collectionVariables.set('username', username);\r",
							"    pm.expect(message).to.eql(`user ${username} created`);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"amy\",\r\n    \"password\": \"bobpass\",\r\n    \"email\": \"amy@mail.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/users",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users"
					]
				},
				"description": "﻿Signs up a new user"
			},
			"response": [
				{
					"name": "Add New Competitor Example",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"amy\",\r\n    \"password\": \"bobpass\",\r\n    \"email\": \"amy@mail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://8080-unknownenti-comp3613com-0lk1yfqx0or.ws-us106.gitpod.io//api/users",
							"protocol": "https",
							"host": [
								"8080-unknownenti-comp3613com-0lk1yfqx0or",
								"ws-us106",
								"gitpod",
								"io"
							],
							"path": [
								"",
								"api",
								"users"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Content-Length",
							"value": "36"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Date",
							"value": "Fri, 01 Dec 2023 17:12:53 GMT"
						},
						{
							"key": "Server",
							"value": "Werkzeug/2.2.2 Python/3.9.10"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": \"user amy created\"\n}"
				}
			]
		},
		{
			"name": "Admin Sign Up",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function () {\r",
							"\tpm.response.to.not.be.error;\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Admin created test\", function () {\r",
							"\r",
							"    const {message} = pm.response.json();\r",
							"    const { username } = JSON.parse(pm.request.body.raw);\r",
							"\r",
							"    pm.collectionVariables.set('username', username);\r",
							"    pm.expect(message).to.eql(`admin ${username} created`);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"randy\",\r\n    \"password\": \"bobpass\",\r\n    \"email\": \"randy@mail.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/admin",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"admin"
					]
				},
				"description": "﻿Signs up a new user"
			},
			"response": [
				{
					"name": "Add New Admin Example",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"randy\",\r\n    \"password\": \"randypass\",\r\n    \"email\": \"randy@mail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://8080-unknownenti-comp3613com-0lk1yfqx0or.ws-us106.gitpod.io//api/admin",
							"protocol": "https",
							"host": [
								"8080-unknownenti-comp3613com-0lk1yfqx0or",
								"ws-us106",
								"gitpod",
								"io"
							],
							"path": [
								"",
								"api",
								"admin"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Content-Length",
							"value": "39"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Date",
							"value": "Fri, 01 Dec 2023 08:19:39 GMT"
						},
						{
							"key": "Server",
							"value": "Werkzeug/2.2.2 Python/3.9.10"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": \"admin randy created\"\n}"
				}
			]
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returned Access Token\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(pm.response.text()).to.include(\"access_token\");\r",
							"    pm.environment.set('access_token', jsonData['access_token']) \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"randy\",\r\n    \"password\": \"bobpass\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/login",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"login"
					]
				},
				"description": "﻿Logs in an existing user"
			},
			"response": [
				{
					"name": "Login Example",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"bob\",\r\n    \"password\": \"bobpass\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://8080-unknownenti-comp3613com-0lk1yfqx0or.ws-us106.gitpod.io//api/login",
							"protocol": "https",
							"host": [
								"8080-unknownenti-comp3613com-0lk1yfqx0or",
								"ws-us106",
								"gitpod",
								"io"
							],
							"path": [
								"",
								"api",
								"login"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Wed, 11 Oct 2023 01:56:23 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "CF-Ray",
							"value": "81437c7e78b5da8f-MIA"
						},
						{
							"key": "CF-Cache-Status",
							"value": "DYNAMIC"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "x-render-origin-server",
							"value": "gunicorn"
						},
						{
							"key": "Server",
							"value": "cloudflare"
						},
						{
							"key": "Content-Encoding",
							"value": "br"
						},
						{
							"key": "alt-svc",
							"value": "h3=\":443\"; ma=86400"
						}
					],
					"cookie": [],
					"body": "{\n    \"access_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTY5Njk4OTM4MywianRpIjoiZWI0MGJjMjgtN2RkNC00MDE0LWJlODQtZGUzMDZjZDM0YTVjIiwidHlwZSI6ImFjY2VzcyIsInN1YiI6MSwibmJmIjoxNjk2OTg5MzgzLCJleHAiOjE2OTc1OTQxODN9.ICSY1pXSPjMPnIYzVKlDXzSg1daw9KYcCkXZJaJIkdY\"\n}"
				}
			]
		},
		{
			"name": "Create Competition",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function () {\r",
							"\tpm.response.to.not.be.error;\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Competition created test\", function () {\r",
							"\r",
							"\tlet jsonData = pm.response.json();\r",
							"\tpm.expect(\r",
							"\t\tjsonData['message'].includes(\"competition created\")\r",
							"\t).to.be.true;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "Bearer {{access_token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Runtime 3\",\r\n    \"location\": \"DCIT\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/competitions",
					"host": [
						"{{host}}"
					],
					"path": [
						"competitions"
					]
				},
				"description": "﻿Creates a new competition with the name and location"
			},
			"response": [
				{
					"name": "Add New Competition Example",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Walktime\",\r\n    \"location\": \"UWI\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://8080-unknownenti-comp3613com-0lk1yfqx0or.ws-us106.gitpod.io//competitions",
							"protocol": "https",
							"host": [
								"8080-unknownenti-comp3613com-0lk1yfqx0or",
								"ws-us106",
								"gitpod",
								"io"
							],
							"path": [
								"",
								"competitions"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Tue, 10 Oct 2023 19:46:22 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "CF-Ray",
							"value": "81415e7c8dc1b3b9-MIA"
						},
						{
							"key": "CF-Cache-Status",
							"value": "DYNAMIC"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "x-render-origin-server",
							"value": "gunicorn"
						},
						{
							"key": "Server",
							"value": "cloudflare"
						},
						{
							"key": "Content-Encoding",
							"value": "br"
						},
						{
							"key": "alt-svc",
							"value": "h3=\":443\"; ma=86400"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": \"competition Walktime created\"\n}"
				},
				{
					"name": "Unauthorized Attempt Example",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Runtime 3\",\r\n    \"location\": \"DCIT\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/competitions",
							"host": [
								"{{host}}"
							],
							"path": [
								"competitions"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Content-Length",
							"value": "53"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Date",
							"value": "Fri, 01 Dec 2023 15:59:41 GMT"
						},
						{
							"key": "Server",
							"value": "Werkzeug/2.2.2 Python/3.9.10"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"only admins can create competitions\"\n}"
				}
			]
		},
		{
			"name": "Add Competition Results",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function () {\r",
							"\tpm.response.to.not.be.error;\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Resuls added test\", function () {\r",
							"\r",
							"\tlet jsonData = pm.response.json();\r",
							"\tpm.expect(\r",
							"\t\tjsonData['message'].includes(\"results added successfully\")\r",
							"\t).to.be.true;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "Bearer {{access_token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"comp_id\": \"1\",\r\n    \"user_id\": \"1\",\r\n    \"rank\": \"1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/competitions/results",
					"host": [
						"{{host}}"
					],
					"path": [
						"competitions",
						"results"
					]
				},
				"description": "﻿Adds a user and the rank they attained in a competition to the competition participants"
			},
			"response": [
				{
					"name": "Add Comp Results Example",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"comp_id\": \"2\",\r\n    \"user_id\": \"2\",\r\n    \"rank\": \"1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://8080-unknownenti-comp3613com-0lk1yfqx0or.ws-us106.gitpod.io//competitions/results",
							"protocol": "https",
							"host": [
								"8080-unknownenti-comp3613com-0lk1yfqx0or",
								"ws-us106",
								"gitpod",
								"io"
							],
							"path": [
								"",
								"competitions",
								"results"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Wed, 11 Oct 2023 01:43:26 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "CF-Ray",
							"value": "814369834f5121e7-MIA"
						},
						{
							"key": "CF-Cache-Status",
							"value": "DYNAMIC"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "x-render-origin-server",
							"value": "gunicorn"
						},
						{
							"key": "Server",
							"value": "cloudflare"
						},
						{
							"key": "Content-Encoding",
							"value": "br"
						},
						{
							"key": "alt-svc",
							"value": "h3=\":443\"; ma=86400"
						}
					],
					"cookie": [],
					"body": "\"results for this participant added successfully\""
				},
				{
					"name": "Unauthorized Attempt Example",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"comp_id\": \"1\",\r\n    \"user_id\": \"3\",\r\n    \"rank\": \"1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/competitions/results",
							"host": [
								"{{host}}"
							],
							"path": [
								"competitions",
								"results"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Content-Length",
							"value": "45"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Date",
							"value": "Fri, 01 Dec 2023 16:00:08 GMT"
						},
						{
							"key": "Server",
							"value": "Werkzeug/2.2.2 Python/3.9.10"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"only admins can add results\"\n}"
				}
			]
		},
		{
			"name": "Get Competition Details",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"  pm.expect(pm.response.code).to.eql(200);\r",
							"});\r",
							"\r",
							"const schema = {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"Date\":{\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"ID\": {\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"Location\": {\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"Name\": {\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"Participants\": {\r",
							"            \"type\": \"array\",\r",
							"            \"items\": [\r",
							"                {\r",
							"                    \"type\": \"object\",\r",
							"                    \"properties\": {\r",
							"                        \"Competition ID\": {\r",
							"                            \"type\": \"integer\"\r",
							"                        },\r",
							"                        \"Rank\": {\r",
							"                            \"type\": \"integer\"\r",
							"                        },\r",
							"                        \"Profile ID\": {\r",
							"                            \"type\": \"integer\"\r",
							"                        }\r",
							"                    }\r",
							"                }\r",
							"            ]\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"            \"Date\",\r",
							"            \"ID\",\r",
							"            \"Location\",\r",
							"            \"Name\",\r",
							"            \"Participants\"\r",
							"      ]\r",
							"    }\r",
							"\r",
							"pm.test('Schema is valid', function() {\r",
							"  pm.response.to.have.jsonSchema(schema);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "Bearer {{access_token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/competitions/1",
					"host": [
						"{{host}}"
					],
					"path": [
						"competitions",
						"1"
					]
				},
				"description": "﻿Gets all the details for a particular competition"
			},
			"response": [
				{
					"name": "Get Competition Details Example",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://8080-unknownenti-comp3613com-0lk1yfqx0or.ws-us106.gitpod.io//competitions/1",
							"protocol": "https",
							"host": [
								"8080-unknownenti-comp3613com-0lk1yfqx0or",
								"ws-us106",
								"gitpod",
								"io"
							],
							"path": [
								"",
								"competitions",
								"1"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Content-Length",
							"value": "363"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Date",
							"value": "Fri, 01 Dec 2023 08:37:20 GMT"
						},
						{
							"key": "Server",
							"value": "Werkzeug/2.2.2 Python/3.9.10"
						}
					],
					"cookie": [],
					"body": "{\n    \"Date\": \"Fri, 01 Dec 2023 08:36:55 GMT\",\n    \"ID\": 1,\n    \"Location\": \"DCIT\",\n    \"Name\": \"Runtime 3\",\n    \"Participants\": [\n        {\n            \"Competition ID\": 1,\n            \"Profile ID\": 1,\n            \"Rank\": 4\n        },\n        {\n            \"Competition ID\": 1,\n            \"Profile ID\": 2,\n            \"Rank\": 2\n        },\n        {\n            \"Competition ID\": 1,\n            \"Profile ID\": 3,\n            \"Rank\": 3\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "Get Competition List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"  pm.expect(pm.response.code).to.eql(200);\r",
							"});\r",
							"\r",
							"const schema = {\r",
							"  \"type\": \"array\",\r",
							"  \"items\": [\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"Date\":{\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"ID\": {\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"Location\": {\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"Name\": {\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"Participants\": {\r",
							"            \"type\": \"array\",\r",
							"            \"items\": [\r",
							"                {\r",
							"                    \"type\": \"object\",\r",
							"                    \"properties\": {\r",
							"                        \"Competition ID\": {\r",
							"                            \"type\": \"integer\"\r",
							"                        },\r",
							"                        \"Rank\": {\r",
							"                            \"type\": \"integer\"\r",
							"                        },\r",
							"                        \"Profile ID\": {\r",
							"                            \"type\": \"integer\"\r",
							"                        }\r",
							"                    }\r",
							"                }\r",
							"            ]\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"            \"Date\",\r",
							"            \"ID\",\r",
							"            \"Location\",\r",
							"            \"Name\",\r",
							"            \"Participants\"\r",
							"      ]\r",
							"    }\r",
							"  ]\r",
							"}\r",
							"\r",
							"pm.test('Schema is valid', function() {\r",
							"  pm.response.to.have.jsonSchema(schema);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "Bearer {{access_token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/competitions",
					"host": [
						"{{host}}"
					],
					"path": [
						"competitions"
					]
				},
				"description": "Gets a list of all the competitions added in json format."
			},
			"response": [
				{
					"name": "Get Competition List Example",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://8080-unknownenti-comp3613com-0lk1yfqx0or.ws-us106.gitpod.io//competitions",
							"protocol": "https",
							"host": [
								"8080-unknownenti-comp3613com-0lk1yfqx0or",
								"ws-us106",
								"gitpod",
								"io"
							],
							"path": [
								"",
								"competitions"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Content-Length",
							"value": "590"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Date",
							"value": "Fri, 01 Dec 2023 06:38:28 GMT"
						},
						{
							"key": "Server",
							"value": "Werkzeug/2.2.2 Python/3.9.10"
						}
					],
					"cookie": [],
					"body": "[\n    {\n        \"Date\": \"Fri, 01 Dec 2023 06:30:36 GMT\",\n        \"ID\": 1,\n        \"Location\": \"DCIT\",\n        \"Name\": \"Runtime 3\",\n        \"Participants\": [\n            {\n                \"Profile ID\": 1,\n                \"Rank\": 6\n            },\n            {\n                \"Profile ID\": 2,\n                \"Rank\": 3\n            },\n            {\n                \"Profile ID\": 3,\n                \"Rank\": 9\n            }\n        ]\n    },\n    {\n        \"Date\": \"Fri, 01 Dec 2023 06:33:23 GMT\",\n        \"ID\": 2,\n        \"Location\": \"DCIT\",\n        \"Name\": \"Runtime 30\",\n        \"Participants\": [\n            {\n                \"Profile ID\": 2,\n                \"Rank\": 1\n            },\n            {\n                \"Profile ID\": 3,\n                \"Rank\": 2\n            }\n        ]\n    }\n]"
				}
			]
		},
		{
			"name": "Get Profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"  pm.expect(pm.response.code).to.eql(200);\r",
							"});\r",
							"\r",
							"var schema = {\r",
							"  \"type\": \"array\",\r",
							"  \"items\": [\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"Name\": { \"type\": \"string\" },\r",
							"        \"Ranking\": { \"type\": \"number\" },\r",
							"        \"User ID\": { \"type\": \"number\" },\r",
							"      },\r",
							"      \"required\": [\"User ID\", \"Name\", \"Ranking\"]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"array\",\r",
							"      \"items\": {\r",
							"        \"type\": \"object\",\r",
							"        \"properties\": {\r",
							"          \"Date\": { \"type\": \"string\" },\r",
							"          \"Location\": { \"type\": \"string\" },\r",
							"          \"ID\": { \"type\": \"integer\" },\r",
							"          \"Name\": { \"type\": \"string\" },\r",
							"          \"Participants\": {\r",
							"            \"type\": \"array\",\r",
							"            \"items\": [\r",
							"                {\r",
							"                    \"type\": \"object\",\r",
							"                    \"properties\": {\r",
							"                        \"Competition ID\": {\r",
							"                            \"type\": \"integer\"\r",
							"                        },\r",
							"                        \"Rank\": {\r",
							"                            \"type\": \"integer\"\r",
							"                        },\r",
							"                        \"Profile ID\": {\r",
							"                            \"type\": \"integer\"\r",
							"                        }\r",
							"                    }\r",
							"                }\r",
							"            ]\r",
							"            }\r",
							"        },\r",
							"        \"required\": [\"ID\", \"Date\", \"Name\", \"Location\", \"Participants\"]\r",
							"      }\r",
							"    }\r",
							"  ]\r",
							"}\r",
							"\r",
							"pm.test('Schema is valid', function() {\r",
							"  pm.response.to.have.jsonSchema(schema);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "Bearer {{access_token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/profile/1",
					"host": [
						"{{host}}"
					],
					"path": [
						"profile",
						"1"
					]
				},
				"description": "﻿Gets the results of a particular competition"
			},
			"response": [
				{
					"name": "Get Profile Example",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://8080-unknownenti-comp3613com-0lk1yfqx0or.ws-us106.gitpod.io//profile/1",
							"protocol": "https",
							"host": [
								"8080-unknownenti-comp3613com-0lk1yfqx0or",
								"ws-us106",
								"gitpod",
								"io"
							],
							"path": [
								"",
								"profile",
								"1"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Content-Length",
							"value": "530"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Date",
							"value": "Fri, 01 Dec 2023 08:37:51 GMT"
						},
						{
							"key": "Server",
							"value": "Werkzeug/2.2.2 Python/3.9.10"
						}
					],
					"cookie": [],
					"body": "[\n    {\n        \"Name\": \"bob\",\n        \"Ranking\": 3,\n        \"User ID\": 1\n    },\n    [\n        {\n            \"Date\": \"Fri, 01 Dec 2023 08:36:55 GMT\",\n            \"ID\": 1,\n            \"Location\": \"DCIT\",\n            \"Name\": \"Runtime 3\",\n            \"Participants\": [\n                {\n                    \"Competition ID\": 1,\n                    \"Profile ID\": 1,\n                    \"Rank\": 4\n                },\n                {\n                    \"Competition ID\": 1,\n                    \"Profile ID\": 2,\n                    \"Rank\": 2\n                },\n                {\n                    \"Competition ID\": 1,\n                    \"Profile ID\": 3,\n                    \"Rank\": 3\n                }\n            ]\n        }\n    ]\n]"
				}
			]
		},
		{
			"name": "View Rankings",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const schema = {\r",
							"    \"type\": \"array\",\r",
							"    \"items\": [\r",
							"        {\r",
							"            \"type\": \"object\",\r",
							"            \"properties\": {\r",
							"                \"ID\": {\r",
							"                    \"type\": \"integer\"\r",
							"                },\r",
							"                \"Name\": {\r",
							"                    \"type\": \"string\"\r",
							"                },\r",
							"                \"Rank\": {\r",
							"                    \"type\": \"integer\"\r",
							"                },\r",
							"                \"Points\": {\r",
							"                    \"type\": \"integer\"\r",
							"                }\r",
							"            }\r",
							"        }\r",
							"    ],\r",
							"    \"required\": [\r",
							"        \"ID\",\r",
							"        \"Name\",\r",
							"        \"Rank\",\r",
							"        \"Points\"\r",
							"    ]\r",
							"}\r",
							"\r",
							"pm.test(\"Status code is 200\", () => {\r",
							"  pm.expect(pm.response.code).to.eql(200);\r",
							"});\r",
							"\r",
							"pm.test('Schema is valid', function() {\r",
							"  pm.response.to.have.jsonSchema(schema);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "Bearer {{access_token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/rankings",
					"host": [
						"{{host}}"
					],
					"path": [
						"rankings"
					]
				},
				"description": "﻿Gets the results of a particular competition"
			},
			"response": [
				{
					"name": "View Rankings Example",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://8080-unknownenti-comp3613com-0lk1yfqx0or.ws-us106.gitpod.io//rankings",
							"protocol": "https",
							"host": [
								"8080-unknownenti-comp3613com-0lk1yfqx0or",
								"ws-us106",
								"gitpod",
								"io"
							],
							"path": [
								"",
								"rankings"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Content-Length",
							"value": "222"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Date",
							"value": "Fri, 01 Dec 2023 08:38:14 GMT"
						},
						{
							"key": "Server",
							"value": "Werkzeug/2.2.2 Python/3.9.10"
						}
					],
					"cookie": [],
					"body": "[\n    {\n        \"ID\": 2,\n        \"Name\": \"amy\",\n        \"Points\": 80,\n        \"Rank\": 1\n    },\n    {\n        \"ID\": 3,\n        \"Name\": \"ike\",\n        \"Points\": 60,\n        \"Rank\": 2\n    },\n    {\n        \"ID\": 1,\n        \"Name\": \"bob\",\n        \"Points\": 50,\n        \"Rank\": 3\n    }\n]"
				}
			]
		},
		{
			"name": "Send Notifications To Top 20",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"  pm.expect(pm.response.code).to.eql(200);\r",
							"});\r",
							"\r",
							"pm.test(\r",
							"\t\"Notifications sent message\", \r",
							"\tfunction () {\r",
							"\t\tlet { message } = pm.response.json();\r",
							"    \tpm.expect(message).to.eql(`Notifications sent`);\r",
							"\t}\r",
							");"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "Bearer {{access_token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/notifications/20",
					"host": [
						"{{host}}"
					],
					"path": [
						"notifications",
						"20"
					]
				},
				"description": "﻿Gets the results of a particular competition"
			},
			"response": [
				{
					"name": "Send Notifications Example",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://8080-unknownenti-comp3613com-0lk1yfqx0or.ws-us106.gitpod.io//notifications/20",
							"protocol": "https",
							"host": [
								"8080-unknownenti-comp3613com-0lk1yfqx0or",
								"ws-us106",
								"gitpod",
								"io"
							],
							"path": [
								"",
								"notifications",
								"20"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Content-Length",
							"value": "38"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Date",
							"value": "Fri, 01 Dec 2023 15:42:55 GMT"
						},
						{
							"key": "Server",
							"value": "Werkzeug/2.2.2 Python/3.9.10"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": \"Notifications sent\"\n}"
				},
				{
					"name": "Unauthorized Attempt Example",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/notifications/20",
							"host": [
								"{{host}}"
							],
							"path": [
								"notifications",
								"20"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Content-Length",
							"value": "46"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Date",
							"value": "Fri, 01 Dec 2023 15:57:19 GMT"
						},
						{
							"key": "Server",
							"value": "Werkzeug/2.2.2 Python/3.9.10"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"only admins can notify users\"\n}"
				}
			]
		},
		{
			"name": "View Sent Notifcations",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const schema = {\r",
							"    \"type\": \"array\",\r",
							"    \"items\": [\r",
							"        {\r",
							"            \"type\": \"object\",\r",
							"            \"properties\": {\r",
							"                \"Message ID\": {\r",
							"                    \"type\": \"integer\"\r",
							"                },\r",
							"                \"Message\": {\r",
							"                    \"type\": \"string\"\r",
							"                },\r",
							"                \"Rank\": {\r",
							"                    \"type\": \"integer\"\r",
							"                },\r",
							"                \"Read\": {\r",
							"                    \"type\": \"boolean\"\r",
							"                },\r",
							"                \"User ID\": {\r",
							"                    \"type\": \"integer\"\r",
							"                }\r",
							"            },\r",
							"        }\r",
							"    ],\r",
							"    \"required\": [\r",
							"        \"Message\",\r",
							"        \"Message ID\",\r",
							"        \"Rank\",\r",
							"        \"User ID\",\r",
							"        \"Read\"\r",
							"    ]\r",
							"};\r",
							"\r",
							"pm.test(\"Status code is 200\", () => {\r",
							"  pm.expect(pm.response.code).to.eql(200);\r",
							"});\r",
							"\r",
							"pm.test('Schema is valid', function() {\r",
							"  pm.response.to.have.jsonSchema(schema);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "Bearer {{access_token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/notifications",
					"host": [
						"{{host}}"
					],
					"path": [
						"notifications"
					]
				},
				"description": "﻿Gets the results of a particular competition"
			},
			"response": [
				{
					"name": "View Sent Notifications Example",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://8080-unknownenti-comp3613com-0lk1yfqx0or.ws-us106.gitpod.io//notifications",
							"protocol": "https",
							"host": [
								"8080-unknownenti-comp3613com-0lk1yfqx0or",
								"ws-us106",
								"gitpod",
								"io"
							],
							"path": [
								"",
								"notifications"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Content-Length",
							"value": "384"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Date",
							"value": "Fri, 01 Dec 2023 15:54:29 GMT"
						},
						{
							"key": "Server",
							"value": "Werkzeug/2.2.2 Python/3.9.10"
						}
					],
					"cookie": [],
					"body": "[\n    {\n        \"Message\": \"Your rank has been updated!\",\n        \"Message ID\": 1,\n        \"Rank\": 1,\n        \"Read\": false,\n        \"User ID\": 3\n    },\n    {\n        \"Message\": \"Your rank has been updated!\",\n        \"Message ID\": 2,\n        \"Rank\": 2,\n        \"Read\": false,\n        \"User ID\": 1\n    },\n    {\n        \"Message\": \"Your rank has been updated!\",\n        \"Message ID\": 3,\n        \"Rank\": 3,\n        \"Read\": false,\n        \"User ID\": 2\n    }\n]"
				},
				{
					"name": "Unauthorized Attempt Example",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/notifications",
							"host": [
								"{{host}}"
							],
							"path": [
								"notifications"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Content-Length",
							"value": "58"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Date",
							"value": "Fri, 01 Dec 2023 15:58:38 GMT"
						},
						{
							"key": "Server",
							"value": "Werkzeug/2.2.2 Python/3.9.10"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"only admins can check sent notifications\"\n}"
				}
			]
		},
		{
			"name": "Get All Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"  pm.expect(pm.response.code).to.eql(200);\r",
							"});\r",
							"\r",
							"const schema = {\r",
							"  \"type\": \"array\",\r",
							"  \"items\": [\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"ID\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"Username\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"Email\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"User Type\": {\r",
							"          \"type\": \"string\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"ID\",\r",
							"        \"Username\",\r",
							"        \"Email\",\r",
							"        \"User Type\"\r",
							"      ]\r",
							"    }\r",
							"  ]\r",
							"}\r",
							"\r",
							"pm.test('Schema is valid', function() {\r",
							"  pm.response.to.have.jsonSchema(schema);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "Bearer {{access_token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/api/users",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users"
					]
				},
				"description": "﻿Gets a list of all users in JSON format"
			},
			"response": [
				{
					"name": "Get All Users Example",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://8080-unknownenti-comp3613com-0lk1yfqx0or.ws-us106.gitpod.io//api/users",
							"protocol": "https",
							"host": [
								"8080-unknownenti-comp3613com-0lk1yfqx0or",
								"ws-us106",
								"gitpod",
								"io"
							],
							"path": [
								"",
								"api",
								"users"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Content-Length",
							"value": "526"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Date",
							"value": "Fri, 01 Dec 2023 08:31:11 GMT"
						},
						{
							"key": "Server",
							"value": "Werkzeug/2.2.2 Python/3.9.10"
						}
					],
					"cookie": [],
					"body": "[\n    {\n        \"email\": \"bob@mail.com\",\n        \"id\": 1,\n        \"user type\": \"Competitor\",\n        \"username\": \"bob\"\n    },\n    {\n        \"email\": \"jack@mail.com\",\n        \"id\": 2,\n        \"user type\": \"Competitor\",\n        \"username\": \"jack\"\n    },\n    {\n        \"email\": \"randy@mail.com\",\n        \"id\": 3,\n        \"user type\": \"Admin\",\n        \"username\": \"randy\"\n    },\n    {\n        \"email\": \"vold@mail.com\",\n        \"id\": 4,\n        \"user type\": \"Admin\",\n        \"username\": \"Voldemort\"\n    },\n    {\n        \"email\": \"amy@mail.com\",\n        \"id\": 5,\n        \"user type\": \"Competitor\",\n        \"username\": \"amy\"\n    }\n]"
				}
			]
		}
	],
	"variable": [
		{
			"key": "username",
			"value": ""
		}
	]
}